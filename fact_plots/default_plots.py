import numpy as np

#dict(bins=100, log=True, func=np.log10, range=[-10, 40] )
default_plots = {
# 'Alpha' : dict(bins=50, range=[-1.8, 1.8], log=True, func=False, xUnit="rad"),
# 'Alpha_Off_1' : dict(bins=50, range=[-1.8, 1.8], log=True, func=False, xUnit="rad"),
# 'Alpha_Off_2' : dict(bins=50, range=[-1.8, 1.8], log=True, func=False, xUnit="rad"),
# 'Alpha_Off_3' : dict(bins=50, range=[-1.8, 1.8], log=True, func=False, xUnit="rad"),
# 'Alpha_Off_4' : dict(bins=50, range=[-1.8, 1.8], log=True, func=False, xUnit="rad"),
# 'Alpha_Off_5' : dict(bins=50, range=[-1.8, 1.8], log=True, func=False, xUnit="rad"),
# 'AzPointing' : False,
# 'AzSourceCalc' : dict(bins=40, range=[0, 400], log=False, func=False, xUnit="deg"),
# 'AzTracking' : False,
'cog_x' : dict(bins=50, range=[-200, 200], log=True, func=False, xUnit="mm"),
'cog_y' : dict(bins=50, range=[-200, 200], log=True, func=False, xUnit="mm"),
'concentration_Ccore' : dict(bins=50, range=[0.0, 100.0], log=True, func=lambda x: x*100, xUnit="%"),
'concentration_cog' : dict(bins=50, range=[0.0, 100.0], log=True, func=lambda x: x*100, xUnit="%"),
'concentration_one_pixel' : dict(bins=100, range=[0.0, 100.0], log=True, func=lambda x: x*100, xUnit="%"),
'concentration_two_pixel' : dict(bins=100, range=[0.0, 100.0], log=True, func=lambda x: x*100, xUnit="%"),
# 'CosDeltaAlpha' : dict(bins=100, range=[-1.0, 1], log=False, func=False, xUnit="a.u."),
# 'CosDeltaAlpha_Off_1' : dict(bins=100, range=[-1.0, 1], log=False, func=False, xUnit="a.u."),
# 'CosDeltaAlpha_Off_2' : dict(bins=100, range=[-1.0, 1], log=False, func=False, xUnit="a.u."),
# 'CosDeltaAlpha_Off_3' : dict(bins=100, range=[-1.0, 1], log=False, func=False, xUnit="a.u."),
# 'CosDeltaAlpha_Off_4' : dict(bins=100, range=[-1.0, 1], log=False, func=False, xUnit="a.u."),
# 'CosDeltaAlpha_Off_5' : dict(bins=100, range=[-1.0, 1], log=False, func=False, xUnit="a.u."),
'delta' : dict(bins=130, range=[-1.8, 1.8], log=False, func=False, xUnit="a.u." ),
# 'Disp' : dict(bins=130, range=[0, 130], log=True, func=False, xUnit="a.u." ),
# 'Distance' : dict(bins=100, range=[0.0, 250.0], log=True, func=False, xUnit="mm" ),
# 'Distance_Off_1' : dict(bins=100, range=[0.0, 250.0], log=True, func=False, xUnit="mm" ),
# 'Distance_Off_2' : dict(bins=100, range=[0.0, 250.0], log=True, func=False, xUnit="mm" ),
# 'Distance_Off_3' : dict(bins=100, range=[0.0, 250.0], log=True, func=False, xUnit="mm" ),
# 'Distance_Off_4' : dict(bins=100, range=[0.0, 250.0], log=True, func=False, xUnit="mm" ),
# 'Distance_Off_5' : dict(bins=100, range=[0.0, 250.0], log=True, func=False, xUnit="mm" ),
# 'event_num' : dict(bins=100, range=[0.0, 15e4], log=True, func=False, xUnit="a.u." ),
'leakage1' : dict(bins=100, range=[0.0, 100.0], log=True, func=lambda x: x*100, xUnit="%" ),
'leakage2' : dict(bins=100, range=[0.0, 100.0], log=True, func=lambda x: x*100, xUnit="%" ),
'length' : dict(bins=50, range=[0.0, 50.0], log=False, func=False, xUnit="mm" ),
# # 'Length' : dict(bins=100, log=True, func=False, xUnit="mm" ),
'm3_long' : dict(bins=100, range=[-1.5, 1.5], log=False, func=False, xUnit="a.u." ),
'm3_trans' : dict(bins=100, range=[-1.5, 1.5], log=False, func=False, xUnit="a.u." ),
'm4_long' : dict(bins=100, range=[0, 5], log=False, func=False, xUnit="a.u." ),
'm4_trans' : dict(bins=100, range=[0, 5], log=False, func=False, xUnit="a.u." ),
'num_pixel' : False,
# 'NROI' : False,
'size' : dict(bins=80, range=[1.5, 4.], log=True, func=np.log10, xUnit="ph.e." ),
'slope_long' : dict(bins=100, range=[-0.6, 0.6], log=True, func=False, xUnit="a.u." ),
'slope_spread' : dict(bins=100, range=[0, 6], log=False, func=False, xUnit="a.u." ),
'slope_spread_weighted' : dict(bins=100, range=[0, 6], log=False, func=False, xUnit="a.u." ),
'slope_trans' : dict(bins=100, range=[-0.6, 0.6], log=True, func=False, xUnit="a.u." ),
# 'Theta' : dict(bins=100, range=[0, 300], log=False, func=False, xUnit="deg" ),
# 'Theta_Off_1' : dict(bins=100, range=[0, 300], log=False, func=False, xUnit="deg" ),
# 'Theta_Off_2' : dict(bins=100, range=[0, 300], log=False, func=False, xUnit="deg" ),
# 'Theta_Off_3' : dict(bins=100, range=[0, 300], log=False, func=False, xUnit="deg" ),
# 'Theta_Off_4' : dict(bins=100, range=[0, 300], log=False, func=False, xUnit="deg" ),
# 'Theta_Off_5' : dict(bins=100, range=[0, 300], log=False, func=False, xUnit="deg" ),
'timespread' : dict(bins=100, range=[-1, 10], log=True, func=lambda x: x*0.5, xUnit="ns" ),
'timespread_weighted' : dict(bins=100, range=[-1, 20], log=True, func=lambda x: x*0.5, xUnit="ns" ),
'width' : dict(bins=50, range=[0, 30], log=False, func=False, xUnit="mm" ),
# 'ZdPointing' : dict(bins=30, range=[-5, 62], log=False, func=False, xUnit="deg" ),
# 'ZdSourceCalc' : dict(bins=20, range=[0, 80], log=False, func=False, xUnit="deg"),
# 'ZdTracking' : dict(bins=30, range=[-5, 62], log=False, func=False, xUnit="deg" ),
'arrival_time_pedestal_kurtosis' : dict(bins=100, range=[-4, 12], log=True, func=False, xUnit="a.u." ),
'arrival_time_pedestal_max' : dict(bins=80, range=[45, 51], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_pedestal_mean' : dict(bins=80, range=[20, 35], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_pedestal_median' : dict(bins=80, range=[17, 35], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_pedestal_min' : dict(bins=80, range=[0, 5], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_pedestal_p25' : dict(bins=80, range=[10, 25], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_pedestal_p75' : dict(bins=80, range=[30, 45], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_pedestal_skewness' : dict(bins=100, range=[-0.5, 0.4], log=False, func=False, xUnit="a.u." ),
'arrival_time_pedestal_variance' : dict(bins=100, range=[16, 30], log=False, func=np.sqrt, xUnit="a.u." ),
'arrival_time_shower_kurtosis' : dict(bins=100, range=[-5, 15], log=False, func=False, xUnit="a.u." ),
'arrival_time_shower_max' : dict(bins=100, range=[15, 55], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_shower_mean' : dict(bins=100, range=[15, 45], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_shower_min' : dict(bins=100, range=[15, 35], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'arrival_time_shower_skewness' : dict(bins=100, range=[-5, 5], log=False, func=False, xUnit="a.u." ),
'arrival_time_shower_variance' : dict(bins=100, range=[0, 5], log=False, func=np.sqrt, xUnit="slice" ),
'arrival_time_mean' : dict(bins=100, range=[22, 30], log=False, func=lambda x: x*0.5, xUnit="ns" ),
# 'm3l' : dict(bins=100, range=[-600, 600], log=True, func=False, xUnit="a.u." ),
# 'm3t' : dict(bins=100, range=[-600, 600], log=True, func=False, xUnit="a.u." ),
'max_slopes_pedestal_kurtosis' : dict(bins=100, range=[0, 60], log=True, func=None, xUnit="mV/slices" ),
'max_slopes_pedestal_max' : dict(bins=100, range=[0, 25], log=False, func=False, xUnit="mV/slices" ),
'max_slopes_pedestal_mean' : dict(bins=100, range=[1, 2.5], log=False, func=False, xUnit="mV/slices" ),
'max_slopes_pedestal_median' : dict(bins=100, range=[1, 2.5], log=False, func=False, xUnit="mV/slices" ),
'max_slopes_pedestal_min' : dict(bins=100, range=[-6, 2], log=False, func=False, xUnit="mV/slices" ),
'max_slopes_pedestal_p25' : dict(bins=100, range=[0, 2], log=False, func=False, xUnit="mV/slices" ),
'max_slopes_pedestal_p75' : dict(bins=100, range=[1.5, 3.5], log=False, func=False, xUnit="mV/slices" ),
'max_slopes_pedestal_skewness' : dict(bins=100, range=[0, 8], log=True, func=False, xUnit="mV/slices" ),
'max_slopes_pedestal_variance' : dict(bins=100, range=[0.9, 1.9], log=False, func=np.sqrt, xUnit="mV/slices" ),
'max_slopes_shower_kurtosis' : dict(bins=100, range=[-5, 20], log=False, func=False, xUnit="a.u." ),
'max_slopes_shower_max' : dict(bins=100, range=[0, 400], log=True, func=False, xUnit="mV/slices" ),
'max_slopes_shower_mean' : dict(bins=100, range=[0, 300], log=True, func=False, xUnit="mV/slices" ),
'max_slopes_shower_min' : dict(bins=100, range=[-10, 20], log=True, func=False, xUnit="mV/slices" ),
'max_slopes_shower_skewness' : dict(bins=100, range=[-3, 5], log=False, func=False, xUnit="a.u." ),
'max_slopes_shower_variance' : dict(bins=100, range=[-1, 600], log=True, func=np.sqrt, xUnit="a.u." ),
'num_islands' : dict(bins=26, range=[0, 25], log=True, func=False, xUnit="a.u." ),
'num_pixel_in_pedestal' : dict(bins=180, range=[0, 1440], log=True, func=False, xUnit="a.u." ),
'num_pixel_in_shower' : dict(bins=180, range=[0, 1440], log=True, func=False, xUnit="a.u." ),
'ped_mean_kurtosis' : dict(bins=100, range=[-1, 15], log=False, func=False, xUnit="a.u." ),
'ped_mean_max' : dict(bins=100, range=[0, 8000], log=True, func=False, xUnit="a.u." ),
'ped_mean_mean' : dict(bins=100, range=[-400, 6000], log=True, func=False, xUnit="a.u." ),
'ped_mean_median' : dict(bins=100, range=[-50, 6000], log=True, func=False, xUnit="a.u." ),
'ped_mean_min' : dict(bins=100, range=[-4000, 3000], log=True, func=False, xUnit="a.u." ),
'ped_mean_p25' : dict(bins=100, range=[-400, 2000], log=True, func=False, xUnit="a.u." ),
'ped_mean_p75' : dict(bins=100, range=[-200, 2000], log=True, func=False, xUnit="a.u." ),
'ped_mean_skewness' : dict(bins=100, range=[0, 2.0], log=False, func=False, xUnit="a.u." ),
'ped_mean_variance' : dict(bins=100, range=[100, 1000], log=True, func=np.sqrt, xUnit="a.u." ),
'ped_median_kurtosis' : dict(bins=100, range=[0, 40], log=False, func=None, xUnit="a.u." ),
'ped_median_max' : dict(bins=100, range=[0, 1200], log=False, func=False, xUnit="a.u." ),
'ped_median_mean' : dict(bins=100, range=[-400, -50], log=False, func=False, xUnit="a.u." ),
'ped_median_median' : dict(bins=100, range=[-400, -50], log=False, func=False, xUnit="a.u." ),
'ped_median_min' : dict(bins=100, range=[-2500, 0], log=False, func=False, xUnit="a.u." ),
'ped_median_p25' : dict(bins=100, range=[-500, 0], log=False, func=False, xUnit="a.u." ),
'ped_median_p75' : dict(bins=100, range=[-350, 0], log=False, func=False, xUnit="a.u." ),
'ped_median_skewness' : dict(bins=100, range=[-4, 4], log=False, func=False, xUnit="a.u." ),
'ped_median_variance' : dict(bins=100, range=[50, 160], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_std_kurtosis' : dict(bins=100, range=[0, 100], log=True, func=False, xUnit="a.u." ),
'ped_std_max' : dict(bins=100, range=[0, 7000], log=True, func=False, xUnit="a.u." ),
'ped_std_mean' : dict(bins=100, range=[0, 7000], log=True, func=False, xUnit="a.u." ),
'ped_std_median' : dict(bins=100, range=[100, 7000], log=True, func=False, xUnit="a.u." ),
'ped_std_min' : dict(bins=100, range=[-10, 6000], log=True, func=False, xUnit="a.u." ),
'ped_std_p25' : dict(bins=100, range=[50, 4000], log=True, func=False, xUnit="a.u." ),
'ped_std_p75' : dict(bins=100, range=[150, 5000], log=True, func=False, xUnit="a.u." ),
'ped_std_skewness' : dict(bins=100, range=[0, 5], log=False, func=False, xUnit="a.u." ),
'ped_std_variance' : dict(bins=100, range=[60, 1000], log=True, func=np.sqrt, xUnit="a.u." ),
'ped_sum_kurtosis' : dict(bins=100, range=[-1, 100], log=True, func=False, xUnit="a.u." ),
'ped_sum_max' : dict(bins=100, range=[0, 5e4], log=True, func=False, xUnit="a.u." ),
'ped_sum_mean' : dict(bins=100, range=[-2000, 4000], log=True, func=False, xUnit="a.u." ),
'ped_sum_median' : dict(bins=100, range=[-2000, 2000], log=True, func=False, xUnit="a.u." ),
'ped_sum_min' : dict(bins=100, range=[-12000, 0], log=True, func=False, xUnit="a.u." ),
'ped_sum_p25' : dict(bins=100, range=[-2000, 500], log=True, func=False, xUnit="a.u." ),
'ped_sum_p75' : dict(bins=100, range=[-1000, 4000], log=True, func=False, xUnit="a.u." ),
'ped_sum_skewness' : dict(bins=100, range=[-0.5, 2.5], log=True, func=False, xUnit="a.u." ),
'ped_sum_variance' : dict(bins=100, range=[700, 1500], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_kurtosis' : dict(bins=100, range=[0, 30], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_max' : dict(bins=100, range=[500, 2500], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_mean' : dict(bins=100, range=[160, 260], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_median' : dict(bins=100, range=[120, 220], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_min' : dict(bins=100, range=[0, 35], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_p25' : dict(bins=100, range=[80, 150], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_p75' : dict(bins=100, range=[180, 300], log=False, func=np.sqrt, xUnit="a.u." ),
'ped_var_skewness' : dict(bins=100, range=[0, 8], log=True, func=np.sqrt, xUnit="a.u." ),
'ped_var_variance' : dict(bins=100, range=[1e5, 1e7], log=True, func=np.sqrt, xUnit="a.u." ),
'pedestal_size' : dict(bins=100, range=[0, 6500], log=False, func=False, xUnit="ph.e." ),
'pedestal_timespread' : dict(bins=100, range=[0, 16], log=False, func=lambda x: x*0.5, xUnit="ns" ),
'photoncharge_pedestal_kurtosis' : dict(bins=100, range=[-1, 12], log=False, func=False, xUnit="a.u." ),
'photoncharge_pedestal_max' : dict(bins=100, range=[0, 30], log=False, func=False, xUnit="ph.e." ),
'photoncharge_pedestal_mean' : dict(bins=100, range=[-0.5, 2], log=False, func=False, xUnit="ph.e." ),
'photoncharge_pedestal_median' : dict(bins=100, range=[-1, 2], log=False, func=False, xUnit="ph.e." ),
'photoncharge_pedestal_min' : dict(bins=100, range=[-6, 1], log=False, func=False, xUnit="ph.e." ),
'photoncharge_pedestal_p25' : dict(bins=100, range=[-1.5, 1], log=False, func=False, xUnit="ph.e." ),
'photoncharge_pedestal_p75' : dict(bins=100, range=[0, 3], log=False, func=False, xUnit="ph.e." ),
'photoncharge_pedestal_skewness' : dict(bins=100, range=[0, 2.5], log=False, func=False, xUnit="a.u." ),
'photoncharge_pedestal_variance' : dict(bins=100, range=[1.0, 2.0], log=False, func=np.sqrt, xUnit="a.u." ),
'photoncharge_shower_kurtosis' : dict(bins=100, range=[-5, 15], log=False, func=False, xUnit="a.u." ),
'photoncharge_shower_max' : dict(bins=100, range=[0, 200], log=False, func=False, xUnit="ph.e." ),
'photoncharge_shower_mean' : dict(bins=100, range=[0, 40], log=False, func=False, xUnit="ph.e." ),
'photoncharge_shower_min' : dict(bins=100, range=[2, 8], log=False, func=False, xUnit="ph.e." ),
'photoncharge_shower_skewness' : dict(bins=100, range=[-3, 5], log=False, func=False, xUnit="a.u." ),
'photoncharge_shower_variance' : dict(bins=100, range=[0, 50], log=False, func=np.sqrt, xUnit="ph.e." ),
'photoncharge_mean' : dict(bins=100, range=[-1, 5], log=False, func=False, xUnit="ph.e." ),
# 'sourcePosition' : False,
# 'timeGradientIntercept' : False,
# 'timeGradientIntercept_err' : False,
# 'timeGradientSSE' : False,
# 'timeGradientslope' : False,
# 'timeGradientslope_err' : False,
'trigger_type': False,
'corsika_event_header_first_interaction_height': None,
'corsika_event_header_az': dict(bins=100, range=[0,7], log=True, func=False, xUnit="" ),
'corsika_event_header_momentum_x': dict(bins=100, range=None, log=False, func=False, xUnit="cm" ),
'corsika_event_header_momentum_y': dict(bins=100, range=None, log=True, func=False, xUnit="cm" ),
'corsika_event_header_momentum_z': dict(bins=100, range=None, log=True, func=False, xUnit="cm" ),
'corsika_event_header_total_energy': dict(bins=100, range=[1.8, 6], log=True, func=np.log10, xUnit="GeV" ),
'corsika_event_header_weighted_num_photons': dict(bins=100, range=None, log=True, func=False, xUnit="ph.e." ),
'corsika_event_header_x': None,
'corsika_event_header_y': None,
'corsika_event_header_zd': None,
# 'MMcEvt.fEventReuse': None,
# 'MMcEvt.fEvtNumber': None,
'ceres_event_photo_electrons_from_shower': dict(bins=100, range=None, log=True, func=False, xUnit="" ),
'ceres_event_thick0': dict(bins=100, range=[-0.01, 0.2], log=True, func=False, xUnit="" ),
'ceres_event_basic_impact': dict(bins=100, range=[0,1e5], log=True, func=False, xUnit="cm" ),

}
